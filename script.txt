
# introducir valor mi, o calcularlo desde p-value:
arg1= mi/p-value
if p-value:
arg2= n

# compute mi value
alfa  = 1.062
beta  = -48.7
gamma = -0.634
p     = float(args.p)
n     = int(args.n)
mi = (alfa - log(p)) / ((-beta) + (-gamma)*n)
print "will generate prune scripts for mi=%f" % mi

toma todos los archivos .adj de <path> le da formato y extrae el último renglón de cada archivo y los pega en un archivote

$ for i in *adj; do sed -i '/^$/d' *adj; sed -i '$a\' *adj; tail -n -1 <"$i"; done > pre-sif.txt 

hay que hacer ahora en pre-sif:

gen1    gen2    1.45    gen3    2.48    gen4    9.67
gen2    gen3    0.15    gen5    1.23    gen6    4.36
gen3    gen4    0.16    gen5    1.90

quede así:

gen1	gen2	1.45
gen1	gen3	2.48
gen1	gen4    9.67
gen2	gen3    0.15
gen2    gen5    1.23
gen2    gen6    4.36
gen3    gen4    0.16
gen3	gen5    1.90

el primer elemento ("character") se repite en la primera columna hasta que se acaba la fila,
segunda y tercera columna se llenan por parejas ("character", numerical) hasta que termina la fila,
generar sif.txt

pruner.sh

#!/bin/bash

# prints pruned to STDOUT
# usage: pruner.sh THRESHOLD PRUNEE -> arg=mi/output from p-value
# prune by mi value, ej. 0.101
# for table: node interaction node ($2 = mi value)
THRESHOLD=$1


awk -F'\t' "\$2 > $THRESHOLD {print \$1\"\t\"\$2\"\t\"\$3}" $2

